{"version":3,"sources":["ValueButton.js","SensorItem.js","utils/applogs.js","SensorList.js","SensorFavourites.js","SensorScreen.js","NotificationEventsGroup.js","NotificationEventsMenuItem.js","ApplicationLogsMenuItem.js","MenuBar.js","serviceWorker.js","subscription.js","index.js","App.js"],"names":["tempColor","teal","humidityColor","indigo","uvColor","blueGrey","lumColor","pink","defaultColor","grey","getColor","value","type","getUnitSign","epochToTime","epoch","d","Date","setUTCSeconds","toLocaleTimeString","ValueButton","sensor","React","useState","open","setOpen","handleClick","Button","variant","key","style","backgroundColor","data","slice","reverse","maxWidth","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","name","List","map","entry","idx","ListItem","button","ListItemText","primary","useStyles","makeStyles","root","paddingTop","paddingBottom","SensorItem","sensors","classes","className","substring","length","secondary","moment","fromNow","display","flexDirection","array","size","chunks","chunk","collection","iteratee","getItem","item","localStorage","addLog","label","obj","logs","JSON","parse","push","message","newLogs","stringify","setItem","clear","theme","width","palette","background","paper","markSensorAsFavourite","sensorId","fetch","headers","method","body","isFavourite","then","response","json","catch","error","console","SensorList","sensorData","items","Object","keys","sort","a","b","localeCompare","swipeRight","content","action","flexGrow","marginTop","marginBottom","padding","spacing","textAlign","color","text","fontSize","fontWeight","position","clearIcon","right","top","sensorName","loadSensors","setSensors","log","unmarkSensorAsFavourite","SensorsFavourites","useEffect","favouriteSensors","setFavouriteSensors","filter","Grid","container","xs","Paper","includes","groupBy","prop","reduce","groups","val","reloadData","setSensorData","fromDateTime","getTime","series","lastUpdated","SensorsScreen","state","Container","optionLabels","options","NotificationEventsGroup","eventsList","handleClickEvents","snoozeFunction","setValue","radioGroupRef","useRef","openSnooze","setOpenSnooze","Fragment","Accordion","AccordionSummary","expandIcon","aria-controls","alignItems","timestamp","event","stopPropagation","onFocus","AccordionDetails","disableBackdropClick","disableEscapeKeyDown","onEntering","current","focus","DialogContent","dividers","RadioGroup","ref","aria-label","onChange","target","option","FormControlLabel","control","Radio","DialogActions","autoFocus","NotificationEventsMenuItem","notificationEvents","setNotifictionEvents","openEvents","setOpenEvents","hours","snoozeUntil","MenuItem","fullWidth","ApplicationLogsMenuItem","openLogs","setOpenLogs","logrow","menuButton","marginRight","title","dialog2","minWidth","MenuBar","anchorEl","setAnchorEl","Boolean","handleClose","AppBar","Toolbar","IconButton","edge","aria-haspopup","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","convertedVapidKey","base64String","repeat","base64","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt","urlBase64ToUint8Array","process","ReactDOM","render","CssBaseline","document","getElementById","URL","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","pushManager","getSubscription","existedSubscription","subscribe","applicationServerKey","userVisibleOnly","newSubscription","subscription","mode","e","Notification","permission"],"mappings":"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","file":"static/js/main.b4f0f82b.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { blueGrey, pink, teal, indigo, grey } from '@material-ui/core/colors';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nconst tempColor = teal[\"400\"];\nconst humidityColor = indigo[\"400\"];\nconst uvColor = blueGrey[\"400\"];\nconst lumColor = pink[\"400\"];\nconst defaultColor = grey[\"400\"];\n\nconst getColor = (value, type) => {\n  switch (type) {\n    case 'temp': return tempColor;\n    case 'humidity': return humidityColor;\n    case 'uv': return uvColor;\n    case 'lum': return lumColor;\n    default: return defaultColor;\n  }\n}\n\nconst getUnitSign = (type) => {\n  switch (type) {\n    case \"temp\": return \"C\";\n    case \"humidity\": return \"%\";\n    case \"lum\": return \"L\";\n    case \"uv\": return \"UV\";\n    default: return \"N/A\";\n  }\n}\n\n// const epochToDateTime = (epoch) => {\n//   const d = new Date(0);\n//   d.setUTCSeconds(epoch / 1000);\n//   return d.toLocaleDateString('sv-SE') + ' ' + d.toLocaleTimeString();\n// }\n\nconst epochToTime = (epoch) => {\n  const d = new Date(0);\n  d.setUTCSeconds(epoch / 1000);\n  return d.toLocaleTimeString();\n}\n\nexport default function ValueButton({ sensor }) {\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      key={sensor.type}\n      style={{ backgroundColor: getColor(sensor.data.slice().reverse()[0][1], sensor.type), maxWidth: 64 }}\n      onClick={handleClick}\n    >{sensor.data.slice().reverse()[0][1] + getUnitSign(sensor.type)}\n      <Dialog onClose={handleClick} aria-labelledby=\"simple-dialog-title\" open={open}>\n        <DialogTitle id=\"simple-dialog-title\">{sensor.name + ' (' + sensor.type + ')'}</DialogTitle>\n        <List>\n          {sensor.data.map((entry, idx) => (\n            <ListItem button onClick={handleClick} key={idx}>\n              <ListItemText primary={epochToTime(entry[0])} />\n              <ListItemText primary={entry[1]} />\n            </ListItem>\n          ))}\n        </List>\n      </Dialog>\n    </Button>\n  )\n}","import React from 'react';\nimport moment from 'moment';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Chunk, Map } from 'react-lodash';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ValueButton from './ValueButton'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n}));\n\nexport default function SensorItem({ sensors }) {\n  const classes = useStyles();\n\n  return (\n    <ListItem className={classes.root}>\n      <ListItemText\n        primary={sensors[0].name.substring(0, 35) + (sensors[0].name.length > 35 ? \"...\" : \"\")}\n        secondary={moment(sensors[0].data.slice().reverse()[0][0]).fromNow()} />\n\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <Chunk array={sensors} size={2}>\n          {chunks =>\n            chunks.map((chunk, idx) =>\n              <div key={idx}>\n                <Map collection={chunk} iteratee={sensor =>\n                  <ValueButton sensor={sensor} key={sensor.type} />\n                } />\n              </div>\n            )\n          }\n        </Chunk>\n      </div>\n    </ListItem>\n  )\n}\n","function getItem() {\n    const item = localStorage.getItem('logs');\n    if (item === null) {\n        return '[]';\n    } else {\n        return item;\n    }\n}\n\nexport function addLog(label, obj) {\n    const item = getItem();\n    const logs = JSON.parse(item || []);\n    if (obj) {\n        logs.push({id: logs.length, message:`${label}: ${obj}`});\n    } else {\n        logs.push({id: logs.length, message:`${label}`});\n    }\n    const newLogs = JSON.stringify(logs);\n    localStorage.setItem('logs', newLogs);\n}\n\nexport function logs() {\n    const item = getItem();\n    return JSON.parse(item);\n}\n\nexport function clear() {\n    localStorage.setItem('logs', '[]');\n}","import React from 'react';\nimport SensorItem from './SensorItem'\nimport { addLog } from './utils/applogs';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  SwipeableList,\n  SwipeableListItem\n} from '@sandstreamdev/react-swipeable-list';\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 440,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst markSensorAsFavourite = (sensorId) => {\n  addLog('markSensorAsFavourite: ', sensorId);\n  fetch(`https://3gzxlzr6d4.execute-api.us-east-1.amazonaws.com/dev/sensor/${sensorId}`,\n    {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: 'PATCH',\n      body: JSON.stringify({ isFavourite: true })\n    }\n  )\n    .then(response => response.json())\n    .then(json => {\n      addLog('Success', json);\n    })\n    .catch((error) => {\n      console.error('ERROR', error);\n    });\n\n};\n\nexport default function SensorList({ sensorData }) {\n    const classes = useStyles();\n    const items = Object.keys(sensorData.items)\n      .sort((a, b) => sensorData.items[a][0].name.localeCompare(sensorData.items[b][0].name));\n\n    const swipeRightOptions = sensorId => ({\n      content: <FavoriteIcon />,\n      action: () => markSensorAsFavourite(sensorId)\n    });\n\n    return (\n      <>\n        <SwipeableList className={classes.root}>\n          {\n            items.map((item) =>\n              <SwipeableListItem key={item}\n                swipeRight={swipeRightOptions(item)}\n              >\n                <SensorItem \n                  sensors={sensorData.items[item]}\n                />\n              </SwipeableListItem>\n            )\n          }\n        </SwipeableList>\n      </>\n   )\n}","import React from 'react';\nimport { addLog } from './utils/applogs';\nimport Grid from '@material-ui/core/Grid';\nimport ValueButton from './ValueButton';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Map } from 'react-lodash';\nimport ClearIcon from '@material-ui/icons/Clear';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 440,\n    marginTop: 10,\n    marginBottom: 10\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    fontSize: 16,\n    fontWeight: 700,\n    position: 'relative'\n  },\n  clearIcon: {\n    color: '#DDDDDD',\n    position: 'absolute',\n    right: 2,\n    top: 2,\n    '&:hover': {\n      color: '#444444',\n    },\n  },\n  sensorName: {\n    marginTop: 0\n  }\n}));\n\nconst loadSensors = (setSensors) => {\n  addLog('loadSensors');\n  fetch(`https://3gzxlzr6d4.execute-api.us-east-1.amazonaws.com/dev/sensor`)\n    .then(response => response.json())\n    .then(json => {\n      console.log('loadSensors', json);\n      setSensors(json.sensors);\n    })\n    .catch((error) => {\n      console.error('ERROR', error);\n    });\n}\n\nconst unmarkSensorAsFavourite = (sensorId) => {\n  addLog('unmarkSensorAsFavourite: ', sensorId);\n  fetch(`https://3gzxlzr6d4.execute-api.us-east-1.amazonaws.com/dev/sensor/${sensorId}`,\n    {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: 'PATCH',\n      body: JSON.stringify({ isFavourite: false })\n    }\n  )\n    .then(response => response.json())\n    .then(json => {\n      addLog('Success', json);\n    })\n    .catch((error) => {\n      console.error('ERROR', error);\n    });\n};\n\nexport default function SensorsFavourites({ sensorData }) {\n  const [sensors, setSensors] = React.useState([]);\n\n  React.useEffect(() => {\n    loadSensors(setSensors)\n  }, []);\n\n  const [favouriteSensors, setFavouriteSensors] = React.useState([]);\n  React.useEffect(() => {\n    setFavouriteSensors(\n      sensors.filter(sensor => sensor.isFavourite)\n      .map(sensor => sensor.sensorId)\n    );\n  }, [sensors]);\n\n  const classes = useStyles();\n\n  return (\n    <Grid id=\"favourites\" container spacing={3} className={classes.root}>\n      <Grid item xs={12}>\n        <Grid container spacing={1}>\n          <Map collection={favouriteSensors} iteratee={sensorId =>\n            <Grid item xs={6} key={sensorId}>\n              <Paper className={classes.paper}>\n                <ClearIcon className={classes.clearIcon} onClick={() => unmarkSensorAsFavourite(sensorId)} />\n                <p className={classes.sensorName}>\n                  {sensorData.items[sensorId] && sensorData.items[sensorId][0].name}\n                </p>\n                <div>\n                  <Map collection={sensorData.items[sensorId]} iteratee={sensor =>\n                    ['temp', 'humidity'].includes(sensor.type) ? <ValueButton sensor={sensor} key={sensor.type} /> : ''\n                  } />\n                </div>\n              </Paper>\n            </Grid>\n          } />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport SensorList from './SensorList';\nimport SensorsFavourites from './SensorFavourites';\nimport Container from '@material-ui/core/Container';\nimport { addLog } from './utils/applogs';\n\nconst groupBy = (array, prop) => {\n  return array.reduce(function (groups, item) {\n    const val = item[prop]\n    groups[val] = groups[val] || []\n    groups[val].push(item)\n    return groups\n  }, {})\n}\n\nconst reloadData = (setSensorData, fromDateTime = new Date(new Date().getTime() - (6 * 3600 * 1000)), toDateTime = new Date()) => {\n  addLog('reloadData', fromDateTime, toDateTime);\n  //    fetch(`https://3gzxlzr6d4.execute-api.us-east-1.amazonaws.com/dev/sensorValues?fromDateTime=${parseInt(fromDateTime.getTime()/1000,10)}&toDateTime=${parseInt(toDateTime.getTime()/1000,10)}`)\n  fetch(`https://3gzxlzr6d4.execute-api.us-east-1.amazonaws.com/dev/sensorValues?from=6`)\n    .then(response => response.json())\n    .then(json => {\n      const items = groupBy(json.series, 'sensorid');\n      console.log('reloadData', items);\n      setSensorData({\n        sensorData: {\n          items,\n          lastUpdated: new Date()\n        }\n      });\n    })\n    .catch((error) => {\n      console.error('ERROR', error);\n    });\n}\n\nexport default function SensorsScreen() {\n  const [state, setSensorData] = React.useState({\n    sensorData: {\n      items: [],\n      lastUpdated: new Date()\n    }\n  });\n\n  React.useEffect(() => {\n    reloadData(setSensorData);\n  }, []);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <SensorsFavourites sensorData={state.sensorData} />\n      {state.sensorData &&\n        <SensorList reloadData={reloadData} sensorData={state.sensorData} />\n      }\n    </Container>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Map } from 'react-lodash';\nimport SnoozeIcon from '@material-ui/icons/Snooze';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst optionLabels = {\n  '1': '1 hour',\n  '2': '2 hours',\n  '4': '4 hours',\n  '24': '24 hours'\n}\nconst options = ['1', '2', '4', '24'];\n\nexport default function NotificationEventsGroup({ eventsList, handleClickEvents, snoozeFunction }) {\n\n  const epochToTime = (epoch) => {\n    const d = new Date(0);\n    d.setUTCSeconds(epoch / 1000);\n    return d.toLocaleTimeString();\n  }\n\n  const valueProp = '1';\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n  const [openSnooze, setOpenSnooze] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!openSnooze) {\n      setValue(valueProp);\n    }\n  }, [valueProp, openSnooze]);\n\n  const handleSnooze = () => {\n    setOpenSnooze(true);\n  }\n\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  const handleCancel = () => {\n    setOpenSnooze(false);\n  };\n\n  const handleOk = () => {\n    setOpenSnooze(false);\n    snoozeFunction(eventsList[0].sensorId, value);\n  };\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"content\"\n          id=\"header\"\n        >\n          <Grid container spacing={0} alignItems=\"center\">\n            <Grid item xs={11}>\n              <ListItemText primary={eventsList[0].name} secondary={epochToTime([...eventsList].reverse()[0].timestamp)} />\n            </Grid>\n            <Grid item xs={1}>\n              <SnoozeIcon\n                onClick={(event) => { event.stopPropagation(); handleSnooze(); }}\n                onFocus={(event) => event.stopPropagation()}\n              />\n            </Grid>\n          </Grid>\n        </AccordionSummary>\n        <AccordionDetails>\n          <List>\n            <Map collection={eventsList} iteratee={entry =>\n              <ListItem button onClick={handleClickEvents} key={`${entry.sensorId}-${entry.timestamp}`}>\n                <ListItemText secondary={epochToTime(entry.timestamp)} primary={entry.message} />\n              </ListItem>\n            } />\n          </List>\n        </AccordionDetails>\n      </Accordion>\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        maxWidth=\"xs\"\n        onEntering={handleEntering}\n        aria-labelledby=\"confirmation-dialog-title\"\n        open={openSnooze}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Snooze For</DialogTitle>\n        <DialogContent dividers>\n          <RadioGroup\n            ref={radioGroupRef}\n            aria-label=\"snooze-for\"\n            name=\"snooze-for\"\n            value={value}\n            onChange={handleChange}\n          >\n            {options.map((option) => (\n              <FormControlLabel value={option} key={option} control={<Radio />} label={optionLabels[option]} />\n            ))}\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleCancel} color=\"primary\">\n            Cancel\n        </Button>\n          <Button onClick={handleOk} color=\"primary\">\n            Ok\n        </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}","import React from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport List from '@material-ui/core/List';\nimport { Map, GroupBy } from 'react-lodash';\nimport { addLog } from './utils/applogs';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport NotificationEventsGroup from './NotificationEventsGroup';\n\nexport default function NotificationEventsMenuItem({ onClose }) {\n\n  const [notificationEvents, setNotifictionEvents] = React.useState([]);\n  const [openEvents, setOpenEvents] = React.useState(false);\n\n  const handleClickEvents = () => {\n    setOpenEvents(false);\n    onClose();\n  };\n\n  const reloadData = (setNotifictionEvents) => {\n    addLog('reloadData');\n    fetch(`https://aoq53tdls8.execute-api.us-east-1.amazonaws.com/dev/sensorNotificationEvent`)\n      .then(response => response.json())\n      .then(json => {\n        setNotifictionEvents(json);\n      })\n      .catch((error) => {\n        console.error('ERROR', error);\n      });\n  }\n\n  const handleOpenEvents = () => {\n    setOpenEvents(true);\n  };\n\n  React.useEffect(() => {\n    reloadData(setNotifictionEvents);\n  }, []);\n\n  const snoozeFunction = (sensorId, hours) => {\n      addLog('snoozeFunction: ', sensorId);\n      fetch(`https://3gzxlzr6d4.execute-api.us-east-1.amazonaws.com/dev/sensor/${sensorId}`,\n        {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          method: 'PATCH',\n          body: JSON.stringify({ snoozeUntil: new Date().getTime() + (1000 * hours * 60 * 60) })\n        }\n      )\n        .then(response => response.json())\n        .then(json => {\n          addLog('Success', json);\n        })\n        .catch((error) => {\n          console.error('ERROR', error);\n        });\n    };\n\n  return (\n    <React.Fragment>\n      <MenuItem onClick={handleOpenEvents}>\n        Notification Events\n      </MenuItem>\n      <Dialog onClose={handleClickEvents} aria-labelledby=\"simple-dialog-title\" open={openEvents} fullWidth={true} maxWidth={'xs'}>\n        <DialogTitle id=\"simple-dialog-title\">Notification Events</DialogTitle>\n        <List>\n          <GroupBy collection={notificationEvents} iteratee={(entry) => entry.sensorId}>\n            {(value) =>\n              <Map collection={Object.keys(value)} iteratee={key =>\n                <NotificationEventsGroup\n                  eventsList={value[key]}\n                  handleClickEvents={handleClickEvents}\n                  key={key}\n                  snoozeFunction={snoozeFunction}\n                />\n              } />\n            }\n          </GroupBy>\n        </List>\n      </Dialog>\n    </React.Fragment>\n  )\n}","import React from 'react';\n\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport List from '@material-ui/core/List';\nimport { Map } from 'react-lodash';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { logs, clear } from './utils/applogs';\nimport Clear from '@material-ui/icons/Clear';\n\nexport default function ApplicationLogsMenuItem({ onClose }) {\n\n  const [openLogs, setOpenLogs] = React.useState(false);\n\n  const handleClickLogs = () => {\n    setOpenLogs(false);\n    onClose();\n  };\n\n  const handleOpenLogs = () => {\n    setOpenLogs(true);\n  };\n\n\n  return (\n    <React.Fragment>\n      <MenuItem onClick={handleOpenLogs}>\n        Application Logs\n      </MenuItem>\n      <Dialog onClose={handleClickLogs} aria-labelledby=\"simple-dialog-title\" open={openLogs} fullWidth={true} maxWidth={'xs'}>\n        <DialogTitle id=\"simple-dialog-title\">\n          Application Logs\n          <Clear onClick={clear}></Clear>\n        </DialogTitle>\n        <List>\n          <Map collection={logs()} iteratee={logrow =>\n            <ListItem key={logrow.id}>\n              <ListItemText primary={logrow.message || logrow} />\n            </ListItem>\n          } />\n        </List>\n      </Dialog>\n    </React.Fragment>\n  )\n}","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport NotificationEventsMenuItem from './NotificationEventsMenuItem';\nimport ApplicationLogsMenuItem from './ApplicationLogsMenuItem';\nimport { addLog } from './utils/applogs';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  dialog2: {\n    minWidth: \"400px\"\n  }\n}));\n\nexport default function MenuBar() {\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n    addLog('handleMenu');\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    addLog('handleClose');\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"fixed\" className={classes.root}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            open={open}\n            onClose={handleClose}\n          >\n            <div>\n              <NotificationEventsMenuItem onClose={handleClose} />\n            </div>\n            <div>\n              <ApplicationLogsMenuItem onClose={handleClose} />\n            </div>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </React.Fragment>\n  )\n}","import { addLog } from './utils/applogs';\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swFileName = process.env.NODE_ENV === 'production' \n        ? 'service-worker.js' \n        : 'custom-sw.js'\n      const swUrl = `${process.env.PUBLIC_URL}/${swFileName}`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          addLog(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              addLog(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              addLog('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      addLog(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { addLog } from './utils/applogs';\nconst convertedVapidKey = urlBase64ToUint8Array(process.env.REACT_APP_PUBLIC_VAPID_KEY)\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = \"=\".repeat((4 - base64String.length % 4) % 4)\n  // eslint-disable-next-line\n  const base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\")\n\n  const rawData = window.atob(base64)\n  const outputArray = new Uint8Array(rawData.length)\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i)\n  }\n  return outputArray\n}\n\nfunction sendSubscription(subscription) {\n  return fetch(`${process.env.REACT_APP_API_URL}/dev/subscription`, {\n    method: 'POST',\n    body: JSON.stringify(subscription),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    mode: 'no-cors'\n  })\n}\n\nexport function subscribeUser() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function(registration) {\n      if (!registration.pushManager) {\n        addLog('Push manager unavailable.')\n        return\n      }\n\n      registration.pushManager.getSubscription().then(function(existedSubscription) {\n        if (existedSubscription === null) {\n          addLog('No subscription detected, make a request.')\n          registration.pushManager.subscribe({\n            applicationServerKey: convertedVapidKey,\n            userVisibleOnly: true,\n          }).then(function(newSubscription) {\n            addLog('New subscription added.')\n            sendSubscription(newSubscription)\n          }).catch(function(e) {\n            if (Notification.permission !== 'granted') {\n              addLog('Permission was not granted.')\n            } else {\n              console.error('An error ocurred during the subscription process.', e)\n            }\n          })\n        } else {\n          addLog('Existed subscription detected.')\n        }\n      })\n    })\n      .catch(function(e) {\n        console.error('An error ocurred during Service Worker registration.', e)\n      })\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as subscription from './subscription';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\nsubscription.subscribeUser();\n","import React from 'react';\nimport SensorScreen from './SensorScreen';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MenuBar from './MenuBar';\n\nexport default function App() {\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <MenuBar />\n      <SensorScreen />\n    </React.Fragment>\n  );\n}"],"sourceRoot":""}